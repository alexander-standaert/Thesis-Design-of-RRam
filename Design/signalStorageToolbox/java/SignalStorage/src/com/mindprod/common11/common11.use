Common11 2.5 build: 9326 released: 2009-05-03

Common utility classes that work under Java 1.1+ using no ArrayLists/Swing.

Copyright (c) 2009 Canadian Mind Products.

Java class library.
Download from http://mindprod.com/products1.html#COMMON11

===> Free <===
Full source included.
You may even include the source code, modified or unmodified
in commercial programs that you write and distribute.
May be used freely for any purpose but military.
For more details on this restriction, see
http://mindprod.com/contact/nonmil.html
If you include any Canadian Mind Products code in your own applications,
your app too must be labeled non-military use only.
All Java jars and source code are included.

----

Prerequisites:

This program runs under any OS,
(e.g. Win2K/XP/Vista/OSX/Linux/Solaris/Vista64/AIX...) so long as you have
<><> Java version 1.1 <><> or later installed.
See http://mindprod.com/jgloss/installingjava.html for details.

----

Installing on a PC:

Download source and compiled class files to run on your own machine as a part of your own program.
First install a recent Java JDK or JVM.
See http://mindprod.com/jgloss/installingjava.html.
To install, extract the zip download with WinZip
(or similar unzip utility) into any directory you please,
often J:\ --  ticking off the "use folder names" option.

----

Installing on a MacIntosh:

Use Safari to download source and compiled class files to run on your own machine as a part of your own program.
Safari will automatically unpack the zip into ~/Downloads (version 10.5)
[or on the Desktop (version 10.4 and earlier)].
First install a recent Java JDK or JVM.
See http://mindprod.com/jgloss/installingjava.html.
You may optionally move the download tree to a permanent home.
I don't have a MacIntosh, just a PC, so I can't test my Java programs for Mac compatibility.
In theory they should work without problems, but in practice that does not always happen.
If you have problems please, let me know, preferably with screenshots and complete verbatim error messages.

----

Rebuilding:

You are pretty much on your own how to use this material.

----

Use:

Includes:

BigDate:         simplified date handling when you want dates without times.
CMPAboutBox:     a proper about box for AWT app/Applets that provides useful information.
Hybrid:          converts AWT Applet into an Application
ImageInfo:       information about a gif, png, jpg.
ImageViewer:     component to display an image
Limiter:         cap, corral and hem methods to ensure a value in range.
Misc:            loadProperties (ordered), beep, thisYear, thisMonth, thisDayOfMonth
ResizingImageViewer: display Image allowing user to change magnification
Shuffle:         shuffles int[], similar to Colllections.shuffle(List)
StoppableThread: threads you can gently stop.
StringTools:     miscellaneous string methods
VersionCheck:    check what version of Java is running.

BigDate is a replacement for Java Date class. Handles dates
999,999 BC to 999,999 AD, the missing year 0, the missing 10
days in 1582, and the switch to the 100/400 leap year rule
in 1600. Heavily commented Java source included. Supports
ISO WeekNumbers and ISO Day of week.  If you want do do
calculations on pure dates, ignoring timezones and time,
BigDate is much easier and faster than the Sun Date and
Calendar classes.  See TestDate for sample uses.

Why the hydrochloric acid molecule logo? Molecules are the
building blocks of matter. The library classes can be used
to build Java programs. Hydrochloric acid in 1 chlorine and
1 hydrogen. in the simplest possible molecule. The 1 theme
is supposed to suggest JDK 1.1.  Hydrochloric acid is pretty
nasty stuff, at least when concentrated. In weak
concentration it tastes a bit like lemon juice. The
connotation is unfortunate.  I hope you find these utilities
useful and most un-lemon like.

If you are using JDK 1.5+, get the com.mindprod.common15
package too.  It has more efficient implementations of some
of these same methods.

----

Version History:

1.1 adds a StringTools.condense method to collapse
multiple spaces down to 1.

1.2 just changes the pad directory structure.

1.3 reformats the code with IntelliJ and adds Javadoc.

1.4 adds fast toUpperCase and toLowerCase for chars and Strings.

1.5 2007-10-02 adds Shuffle class.

1.6 2007-10-15 nearestXXXDay, dayOfWeek and calendarDayOfWeek in BigDate

1.7 2008-01-29 StringTools.indexOfWhiteSpace

1.8 2008-02-02 BigDate has named constants for days of week and months of the year.

1.9 2008-03-10 add StringTools.firstWord

2.0 2008-11-12 add JDK Version to About box

2.1 2008-12-16 BigDate toString now handles BC and non-4-digit years.
              toYYYYString, Constructor handles BC and non-4-digit years.

2.2 2009-04-19 - add countLeading, countTrailing, TrimLeading, TrimTrailing that take multiple trim chars.

2.3 2009-04-29 - add StringTools.countInstances(String,char), BigDate.parseYYYYmmdd(String)

2.4 2009-04-30 - correct bug in StringTools.countLeading(String, String) and hence in trimLeading(String, String)
                 add pruneExcessBlankLines

2.5 2009-05-03 - add Localise class

-30-


